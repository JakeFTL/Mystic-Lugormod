name: Release

on:
  workflow_run:
    workflows: ["build"]
    branches: ["release"]
    types: 
      - completed
  release:
    types: [published]

jobs:

  create-latest:
    name: üéí Create latest build for 'release'
    if: gitea.event_name == 'push' && gitea.ref == 'refs/heads/release'
    needs: [msvc, linux]
    runs-on: linux-latest
    steps:
      - name: ‚è¨ Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: ‚è¨ Download Artifacts
        uses: actions/download-artifact@v3

        # Temporarly disable 64-bit zipping
        #  7z a -r windows-x86_64.zip ./windows-x86_64-Release-Non-Portable/* '-x!msvcp*.*' '-x!vcruntime*.*' '-x!concrt*.*'
        #  mv ./linux-x86-Release-Non-Portable/* linux-x86.tar.gz
        #  mv ./linux-x86_64-Release-Non-Portable/* linux-x86_64.tar.gz
      - name: üóúÔ∏è Create binary archives
        run: |
          echo "Current directory: $(pwd)"
          7z a -r windows-x86.zip ./windows-x86-Release-Non-Portable/* '-x!msvcp*.*' '-x!vcruntime*.*' '-x!concrt*.*'
          tar -czvf linux-x86.tar.gz ./linux-x86-Release-Non-Portable/*
          tar -czvf linux-x86_64.tar.gz ./linux-x86-Release-Non-Portable/*

      - name: üõ†Ô∏è Create latest build
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITEA_TOKEN }}
          automatic_release_tag: "latest"
          prerelease: false
          title: Latest Build
          files: |
            *.zip
            *.tar.gz

  publish:
    name: üìÖ Publish
    if: gitea.event_name == 'release'
    needs: [msvc, linux]
    runs-on: linux-latest

    strategy:
      matrix:
        include:
          - artifact_dir: windows-x86-Release-Non-Portable/JediAcademy
            artifact_name: windows-x86.zip
            zip: true

          # Temporarly disabled, no 64-bit varaint yet
          # - artifact_dir: windows-x86_64-Release-Non-Portable/JediAcademy
          #   artifact_name: windows-x86_64.zip
          #   zip: true

          - artifact_dir: linux-x86-Release-Non-Portable
            artifact_name: linux-x86.zip
            zip: false

          - artifact_dir: linux-x86_64-Release-Non-Portable
            artifact_name: linux-x86_64.zip
            zip: false

    steps:
      - name: ‚è¨ Checkout Repository
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: ‚è¨ Download Artifacts
        uses: actions/download-artifact@v3

      - name: üóúÔ∏è Create archive
        run: |
          if [ "${{ matrix.zip }}" == "true" ]; then
            7z a -r ${{ matrix.artifact_name }} ./${{ matrix.artifact_dir }}/* '-x!msvcp*.*' '-x!vcruntime*.*' '-x!concrt*.*'
          else
            mv ./${{ matrix.artifact_dir }}/* ${{ matrix.artifact_name }}
          fi

      - name: ‚è´ Upload archives
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITEA_TOKEN }}
          tag: ${{ gitea.ref }}
          overwrite: true
          file: ${{ matrix.artifact_name }}
